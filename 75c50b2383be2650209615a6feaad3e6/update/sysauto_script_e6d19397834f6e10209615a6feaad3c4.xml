<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <business_calendar/>
        <condition/>
        <conditional>false</conditional>
        <entered_time>1970-01-01 00:00:00</entered_time>
        <max_drift/>
        <name>Update City Weather Periodically</name>
        <offset/>
        <offset_type>0</offset_type>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period>1970-01-01 00:05:00</run_period>
        <run_start>2025-08-04 17:35:29</run_start>
        <run_time>1970-01-01 08:00:00</run_time>
        <run_type>periodically</run_type>
        <script><![CDATA[(function() {

    var cityWeatherGR = new GlideRecord('x_1117051_cityweat_cityweatherinfo');
    cityWeatherGR.query();

    while (cityWeatherGR.next()) {
        
		if (!cityWeatherGR.city) {
            gs.info('Weather scheduled job: City not provided; skipping weather fetch');
            return;
        }


        try {
            var r = new sn_ws.RESTMessageV2('x_1117051_cityweat.OpenWeather', 'GetCurrentWeather');
            r.setStringParameterNoEscape('city name', cityWeatherGR.city);
            r.setStringParameterNoEscape('units', 'metric');
            r.setStringParameterNoEscape('API key', gs.getProperty('x_1117051_cityweat.weather_api_key'));

            var response = r.execute();
            var responseBody = response.getBody();
            var httpStatus = response.getStatusCode();

            gs.info('Weather: response ' + JSON.stringify(response));
            gs.info('Weather: responseBody' + responseBody);
            gs.info('Weather: httpStatus ' + httpStatus);

            if (httpStatus == 200) {
                var responseBody_parsed = JSON.parse(responseBody);
                gs.info('Weather: responseBody_parsed type is ' + typeof responseBody_parsed);

                var temp = (responseBody_parsed.main && responseBody_parsed.main.temp) ? responseBody_parsed.main.temp : 0;
                //gs.info('Weather: temperature is:' + temp);

                var condition = (responseBody_parsed.weather && responseBody_parsed.weather.length > 0) ? responseBody_parsed.weather[0].main : 'N/A';
                //gs.info('Weather: condition is:' + condition);

                var humidity = (responseBody_parsed.main && responseBody_parsed.main.humidity) ? responseBody_parsed.main.humidity : 0;
                //gs.info('Weather: humidity is:' + humidity);

                var pressure = (responseBody_parsed.main && responseBody_parsed.main.pressure) ? responseBody_parsed.main.pressure : 0;
                //gs.info('Weather: pressure is:' + pressure);

                cityWeatherGR.temperature = temp;
                cityWeatherGR.condition = condition;
                cityWeatherGR.humidity = humidity;
                cityWeatherGR.pressure = pressure;

                cityWeatherGR.update();

            } else {
                gs.warn('Weather Scheduled Job: OpenWeather returned HTTP Status ' + httpStatus);
            }

        } catch (ex) {
            var message = ex.message;
            gs.error('Weather Scheduled Job: ' + message);
        }

    }

})();]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-08-04 17:37:53</sys_created_on>
        <sys_id>e6d19397834f6e10209615a6feaad3c4</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Update City Weather Periodically</sys_name>
        <sys_package display_value="CityWeatherInfo" source="x_1117051_cityweat">75c50b2383be2650209615a6feaad3e6</sys_package>
        <sys_policy/>
        <sys_scope display_value="CityWeatherInfo">75c50b2383be2650209615a6feaad3e6</sys_scope>
        <sys_update_name>sysauto_script_e6d19397834f6e10209615a6feaad3c4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-08-04 17:54:40</sys_updated_on>
        <time_zone/>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
